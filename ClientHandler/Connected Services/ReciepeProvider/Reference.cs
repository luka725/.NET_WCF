//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientHandler.ReciepeProvider {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Recipe", Namespace="http://schemas.datacontract.org/2004/07/DataAdapter")]
    [System.SerializableAttribute()]
    public partial class Recipe : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string recipe_descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int recipe_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string recipe_instructionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string recipe_nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string recipe_description {
            get {
                return this.recipe_descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.recipe_descriptionField, value) != true)) {
                    this.recipe_descriptionField = value;
                    this.RaisePropertyChanged("recipe_description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int recipe_id {
            get {
                return this.recipe_idField;
            }
            set {
                if ((this.recipe_idField.Equals(value) != true)) {
                    this.recipe_idField = value;
                    this.RaisePropertyChanged("recipe_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string recipe_instructions {
            get {
                return this.recipe_instructionsField;
            }
            set {
                if ((object.ReferenceEquals(this.recipe_instructionsField, value) != true)) {
                    this.recipe_instructionsField = value;
                    this.RaisePropertyChanged("recipe_instructions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string recipe_name {
            get {
                return this.recipe_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.recipe_nameField, value) != true)) {
                    this.recipe_nameField = value;
                    this.RaisePropertyChanged("recipe_name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ReciepeProvider.IReciepeService")]
    public interface IReciepeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReciepeService/GetAllReciepe", ReplyAction="http://tempuri.org/IReciepeService/GetAllReciepeResponse")]
        ClientHandler.ReciepeProvider.Recipe[] GetAllReciepe();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReciepeService/GetAllReciepe", ReplyAction="http://tempuri.org/IReciepeService/GetAllReciepeResponse")]
        System.Threading.Tasks.Task<ClientHandler.ReciepeProvider.Recipe[]> GetAllReciepeAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IReciepeServiceChannel : ClientHandler.ReciepeProvider.IReciepeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReciepeServiceClient : System.ServiceModel.ClientBase<ClientHandler.ReciepeProvider.IReciepeService>, ClientHandler.ReciepeProvider.IReciepeService {
        
        public ReciepeServiceClient() {
        }
        
        public ReciepeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReciepeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReciepeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReciepeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ClientHandler.ReciepeProvider.Recipe[] GetAllReciepe() {
            return base.Channel.GetAllReciepe();
        }
        
        public System.Threading.Tasks.Task<ClientHandler.ReciepeProvider.Recipe[]> GetAllReciepeAsync() {
            return base.Channel.GetAllReciepeAsync();
        }
    }
}
